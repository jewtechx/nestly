{"version":3,"file":"user.js","sourceRoot":"/","sources":["models/user/user.ts"],"names":[],"mappings":";;;AAAA,uCAAsD;AAEtD,+BAA0B;AAC1B,gEAA6B;AAE7B,MAAM,UAAU,GAAG,IAAI,iBAAM,CAAgB;IAC3C,QAAQ,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;IAC1C,KAAK,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;IACvC,QAAQ,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;IAC1C,IAAI,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,QAAQ,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE;IAC1E,gBAAgB,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC,IAAA,SAAE,GAAE,EAAE;IACvE,iBAAiB,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE;CACrD,CAAC,CAAC;AAGH,UAAU,CAAC,GAAG,CAAC,MAAM,EAAE,UAAgB,IAAI;;QACzC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC;YAAE,OAAO,IAAI,EAAE,CAAC;QAChD,IAAI;YACF,MAAM,IAAI,GAAG,MAAM,kBAAM,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;YACtC,MAAM,IAAI,GAAG,MAAM,kBAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;YACpD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,EAAE,CAAC;SACR;QAAC,OAAO,GAAG,EAAE;YACZ,IAAI,CAAC,GAAoB,CAAC,CAAC;SAC5B;IACH,CAAC;CAAA,CAAC,CAAC;AAGH,MAAM,IAAI,GAAG,IAAA,gBAAK,EAAC,MAAM,EAAE,UAAU,CAAC,CAAC;AAEvC,kBAAe,IAAI,CAAC","sourcesContent":["import { Schema, model,CallbackError} from \"mongoose\";\r\nimport { IUserDocument } from '../../types/user/user';\r\nimport { v4 } from 'uuid';\r\nimport bcrypt from \"bcryptjs\"\r\n\r\nconst userSchema = new Schema<IUserDocument>({\r\n  username: { type: String, required: true },\r\n  email: { type: String, required: true },\r\n  password: { type: String, required: true },\r\n  type: { type: String, enum: ['OWNER', 'AGENT', 'RENTER'], required: true },\r\n  verificationCode: { type: String, required: true, default: () => v4() },\r\n  passwordResetCode: { type: String, required: false },\r\n});\r\n\r\n\r\nuserSchema.pre(\"save\", async function (next) {\r\n  if (!this.isModified(\"password\")) return next();\r\n  try {\r\n    const salt = await bcrypt.genSalt(10);\r\n    const hash = await bcrypt.hash(this.password, salt);\r\n    this.password = hash;\r\n    next();\r\n  } catch (err) {\r\n    next(err as CallbackError);\r\n  }\r\n});\r\n\r\n\r\nconst User = model('User', userSchema);\r\n\r\nexport default User;\r\n"]}