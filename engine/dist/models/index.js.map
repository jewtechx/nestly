{"version":3,"file":"index.js","sourceRoot":"/","sources":["models/index.ts"],"names":[],"mappings":";;;AAAA,uCAAmC;AAEnC,+DAA+B;AAC/B,+DAA+B;AAM/B,SAA8B,MAAM,CAAC,MAAoB;;QACvD,IAAI;YACF,MAAM,IAAA,kBAAO,EAAC,MAAM,CAAC,GAAG,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;YAC/C,aAAG,CAAC,IAAI,CAAC,oCAAoC,CAAC,CAAA;YAE9C,MAAM,cAAI,CAAC,gBAAgB,EAAE,CAAC;YAE9B,OAAO;gBACL,IAAI,EAAJ,cAAI;aACL,CAAC;SACH;QAAC,OAAO,CAAC,EAAE;YACV,MAAM,IAAI,KAAK,CAAC,yCAAyC,CAAC,EAAE,CAAC,CAAC;SAC/D;IACH,CAAC;CAAA;AAbD,yBAaC","sourcesContent":["import { connect } from 'mongoose';\r\nimport { Config } from '../config';\r\nimport User from './user/user';\r\nimport log from '../utils/log';\r\n\r\nexport interface IModels {\r\n  User: typeof User;\r\n}\r\n\r\nexport default async function initDB(config: Config['db']): Promise<IModels> {\r\n  try {\r\n    await connect(config.uri, { autoIndex: true });\r\n    log.info(\"Connected to database successfully\")\r\n\r\n    await User.createCollection();\r\n\r\n    return {\r\n      User,\r\n    };\r\n  } catch (e) {\r\n    throw new Error(`Error while connecting to database :: ${e}`);\r\n  }\r\n}\r\n"]}