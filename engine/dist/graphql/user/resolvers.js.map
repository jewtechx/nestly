{"version":3,"file":"resolvers.js","sourceRoot":"/","sources":["graphql/user/resolvers.ts"],"names":[],"mappings":";;;AACA,mBAAyB,UAAuB;IAC9C,OAAO;QACL,IAAI,EAAE;YACJ,kBAAkB,EAAE,UAAgB,CAAM,EAAE,IAAS;;oBACnD,OAAO,MAAM,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;gBACtD,CAAC;aAAA;SACF;QAED,KAAK,EAAE;YACL,IAAI,EAAE,UAAgB,CAAM,EAAE,EAAE,EAAE,OAAY;;oBAC5C,IAAI;wBACF,MAAM,IAAI,GAAG,MAAM,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;wBAEpE,OAAO,IAAI,CAAC;qBACb;oBAAC,OAAO,GAAG,EAAE;wBACZ,MAAM,IAAI,KAAK,CAAC,8BAA8B,CAAC,CAAC;qBACjD;gBACH,CAAC;aAAA;SACF;QAED,QAAQ,EAAE;YACR,UAAU,EAAE,UAAgB,CAAM,EAAE,IAAS;;oBAC3C,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,UAAU,CAAC,QAAQ,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAC;oBACpG,OAAO,IAAI,CAAC;gBACd,CAAC;aAAA;YAED,UAAU,EAAE,UAAgB,CAAM,EAAE,IAAS;;oBAC3C,MAAM,QAAQ,GAAG,MAAM,UAAU,CAAC,QAAQ,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;oBACxF,OAAO,QAAQ,CAAC;gBAClB,CAAC;aAAA;YAED,cAAc,EAAE,UAAgB,CAAM,EAAE,IAAS;;oBAC/C,MAAM,cAAc,GAAG,MAAM,UAAU,CAAC,QAAQ,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBACtG,OAAO,cAAc,CAAC;gBACxB,CAAC;aAAA;YAED,aAAa,EAAE,UAAgB,CAAM,EAAE,IAAS;;oBAC9C,MAAM,aAAa,GAAG,MAAM,UAAU,CAAC,QAAQ,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;oBACnG,OAAO,aAAa,CAAC;gBACvB,CAAC;aAAA;YAED,iBAAiB,EAAE,UAAgB,CAAM,EAAE,IAAS;;oBAClD,MAAM,MAAM,GAAG,MAAM,UAAU,CAAC,QAAQ,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;oBAC3G,OAAO,MAAM,CAAA;gBACf,CAAC;aAAA;SACF;KACF,CAAC;AACJ,CAAC;AA/CD,4BA+CC","sourcesContent":["import { IAppContext } from '../../types/app';\r\nexport default function (appContext: IAppContext) {\r\n  return {\r\n    User: {\r\n      __resolveReference: async function (_: any, args: any) {\r\n        return await appContext.models.User.findById(_._id);\r\n      },\r\n    },\r\n\r\n    Query: {\r\n      user: async function (_: any, {}, context: any) {\r\n        try {\r\n          const user = await appContext.models.User.findOne(context.user._id);\r\n\r\n          return user;\r\n        } catch (err) {\r\n          throw new Error('Eror getting user in graphql');\r\n        }\r\n      },\r\n    },\r\n\r\n    Mutation: {\r\n      createUser: async function (_: any, args: any) {\r\n        const { user } = await appContext.services.UserService.registerUser(args.CreateUnverifiedUserInput);\r\n        return user;\r\n      },\r\n\r\n      verifyUser: async function (_: any, args: any) {\r\n        const verified = await appContext.services.UserService.verifyUser(args.VerifyUserInput);\r\n        return verified;\r\n      },\r\n\r\n      forgotPassword: async function (_: any, args: any) {\r\n        const forgotPassword = await appContext.services.UserService.forgotPassword(args.ForgotPasswordInput);\r\n        return forgotPassword;\r\n      },\r\n\r\n      resetPassword: async function (_: any, args: any) {\r\n        const resetPassword = await appContext.services.UserService.resetPassword(args.ResetPasswordInput);\r\n        return resetPassword;\r\n      },\r\n\r\n      createUserSession: async function (_: any, args: any) {\r\n        const tokens = await appContext.services.UserSessionService.createUserSession(args.CreateUserSessionInput);\r\n        return tokens\r\n      },\r\n    },\r\n  };\r\n}\r\n"]}