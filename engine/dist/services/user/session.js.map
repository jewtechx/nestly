{"version":3,"file":"session.js","sourceRoot":"/","sources":["services/user/session.ts"],"names":[],"mappings":";;;AAAA,kEAAwD;AAExD,6CAA4C;AAE5C,MAAqB,kBAAmB,SAAQ,aAAQ;IACtD,YAAY,KAAkB;QAC5B,KAAK,CAAC,KAAK,CAAC,CAAC;IACf,CAAC;IAEK,iBAAiB,CAAC,KAAiB;;YACvC,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,KAAK,CAAC;YAElC,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;YAEvD,IAAI,CAAC,IAAI,EAAE;gBACT,MAAM,IAAI,KAAK,CAAC,2BAA2B,CAAC,CAAC;aAC9C;YAED,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;gBAClB,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC;aAC7C;YAED,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;YAEtD,IAAI,CAAC,OAAO,EAAE;gBACZ,MAAM,IAAI,KAAK,CAAC,2BAA2B,CAAC,CAAC;aAC9C;YAED,MAAM,WAAW,GAAG,IAAA,eAAO,EAAC,IAAI,CAAC,GAAG,EAAE,uBAAuB,EAAE;gBAC7D,SAAS,EAAE,IAAI;aAChB,CAAC,CAAC;YAEH,MAAM,YAAY,GAAG,IAAA,eAAO,EAAC,IAAI,CAAC,GAAG,EAAE,wBAAwB,EAAE;gBAC/D,SAAS,EAAE,IAAI;aAChB,CAAC,CAAC;YAEH,OAAO,EAAC,WAAW,EAAC,YAAY,EAAC,CAAC;QACpC,CAAC;KAAA;CACF;AAlCD,qCAkCC","sourcesContent":["import IService, { IAppContext } from '../../types/app';\r\nimport { IUserInput } from '../../types/user/user';\r\nimport { signJwt } from '../../utils/token';\r\n\r\nexport default class UserSessionService extends IService {\r\n  constructor(props: IAppContext) {\r\n    super(props);\r\n  }\r\n\r\n  async createUserSession(input: IUserInput) {\r\n    const { email, password } = input;\r\n\r\n    const user = await this.models.User.findOne({ email });\r\n\r\n    if (!user) {\r\n      throw new Error('Invalid email or password');\r\n    }\r\n\r\n    if (!user.verified) {\r\n      throw new Error('Please verify your email');\r\n    }\r\n\r\n    const isValid = await user.validatePassword(password);\r\n\r\n    if (!isValid) {\r\n      throw new Error('Invalid email or password');\r\n    }\r\n\r\n    const accessToken = signJwt(user._id, 'accessTokenPrivateKey', {\r\n      expiresIn: '1d',\r\n    });\r\n\r\n    const refreshToken = signJwt(user._id, 'refreshTokenPrivateKey', {\r\n      expiresIn: '1y',\r\n    });\r\n\r\n    return {accessToken,refreshToken};\r\n  }\r\n}\r\n"]}