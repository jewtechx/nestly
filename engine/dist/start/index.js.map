{"version":3,"file":"index.js","sourceRoot":"/","sources":["start/index.ts"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;AAGb,8DAA8B;AAM9B,+DAA+B;AAC/B,mEAAuC;AACvC,+DAA+B;AAG/B,SAA8B,KAAK,CAAC,MAAc;;QAChD,IAAI;YACF,yBAAyB;YACzB,MAAM,UAAU,GAAgB,EAAE,CAAC;YAEnC,oBAAoB;YACpB,UAAU,CAAC,MAAM,GAAG,MAAM,IAAA,gBAAM,EAAC,MAAM,CAAC,EAAE,CAAC,CAAA;YAC3C,UAAU,CAAC,QAAQ,GAAG,MAAM,IAAA,kBAAY,EAAC,UAAU,CAAC,CAAA;YAEpD,MAAM,GAAG,GAAG,IAAA,iBAAO,GAAE,CAAC;YACtB,GAAG,CAAC,GAAG,CAAC,iBAAO,CAAC,UAAU,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;YAEhD,GAAG,CAAC,GAAG,CAAC,cAAc,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE;gBACnC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;YAC1C,CAAC,CAAC,CAAC;YAEH,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,EAAE;gBAC/B,aAAG,CAAC,IAAI,CACN,oCAAoC,MAAM,CAAC,GAAG,CAAC,IAAI,UAAU,CAC9D,CAAC;YACJ,CAAC,CAAC,CAAC;SACJ;QAAC,OAAO,GAAG,EAAE;YACZ,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;SACpB;IACH,CAAC;CAAA;AAxBD,wBAwBC","sourcesContent":["\"use strict\";\r\n\r\nimport { Config } from \"../config\";\r\nimport express from \"express\";\r\nimport { IAppContext } from \"../types/app\";\r\nimport cors from \"cors\";\r\nimport { json } from \"body-parser\";\r\nimport { expressMiddleware } from \"@apollo/server/express4\";\r\n\r\nimport initDb from \"../models\";\r\nimport initServices from \"../services\";\r\nimport log from \"../utils/log\";\r\n\r\n\r\nexport default async function start(config: Config) {\r\n  try {\r\n    // setting global context\r\n    const appContext: IAppContext = {};\r\n\r\n    // initialize models\r\n    appContext.models = await initDb(config.db)\r\n    appContext.services = await initServices(appContext)\r\n\r\n    const app = express();\r\n    app.use(express.urlencoded({ extended: true }));\r\n\r\n    app.use(\"/healthcheck\", (req, res) => {\r\n      res.status(200).send(\"All is green!!!\");\r\n    });\r\n\r\n    app.listen(config.app.port, () => {\r\n      log.info(\r\n        `Server ready at http://localhost:${config.app.port}/graphql`\r\n      );\r\n    }); \r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n}"]}