{"version":3,"file":"booking.js","sourceRoot":"/","sources":["services/booking.ts"],"names":[],"mappings":";;;AAAA,+DAAqD;AAGrD,MAAqB,uBAAwB,SAAQ,aAAQ;IAC3D,YAAY,KAAkB;QAC5B,KAAK,CAAC,KAAK,CAAC,CAAC;IACf,CAAC;IAEK,mBAAmB,CAAC,wBAA6B,EAAE,MAAW;;YAClE,IAAI;gBACF,MAAM,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;gBAErC,MAAM,EAAE,SAAS,EAAC,GAAG,wBAAwB,CAAC;gBAE9C,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,OAAO,CAAC,EAAC,SAAS,EAAC,CAAC,CAAA;gBAEvE,OAAO,OAAO,CAAC;aAChB;YAAC,OAAO,CAAC,EAAE;gBACV,MAAM,IAAI,KAAK,CAAC,0CAA0C,CAAC,EAAE,CAAC,CAAC;aAChE;QACH,CAAC;KAAA;IAEK,sBAAsB,CAC1B,2BAAmD,EACnD,MAAW;;YAEX,IAAI;gBACF,MAAM,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;gBAErC,MAAM,EAAE,SAAS,EAAE,GAAG,2BAA2B,CAAC;gBAElD,MAAM,IAAI,CAAC,sBAAsB,CAAC,SAAS,CAAC,CAAC;gBAE7C,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,MAAM,iBAAG,IAAI,EAAE,MAAM,IAAK,2BAA2B,EAAG,CAAC;gBAE5G,OAAO,OAAO,CAAC;aAChB;YAAC,OAAO,CAAC,EAAE;gBACV,MAAM,IAAI,KAAK,CAAC,2BAA2B,CAAC,EAAE,CAAC,CAAC;aACjD;QACH,CAAC;KAAA;IAEK,sBAAsB,CAAC,2BAAgC,EAAE,MAAW;;YACxE,IAAI;gBACF,MAAM,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;gBAErC,MAAM,EAAE,OAAO,EAAE,GAAG,2BAA2B,CAAC;gBAEhD,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC;gBAE1D,QAAQ,CAAC,SAAS,CAAC,EAAE,IAAI,oBAAO,2BAA2B,CAAE,EAAE,CAAC,CAAC;gBAEjE,OAAO,QAAQ,CAAC;aACjB;YAAC,OAAO,CAAC,EAAE;gBACV,MAAM,IAAI,KAAK,CAAC,wBAAwB,CAAC,CAAC;aAC3C;QACH,CAAC;KAAA;IAEK,sBAAsB,CAAC,SAAc,EAAE,MAAW;;YACtD,IAAI;gBACF,MAAM,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;gBAErC,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC,CAAC;gBAE5D,MAAM,QAAQ,CAAC,SAAS,EAAE,CAAC;gBAE3B,OAAO,8BAA8B,CAAC;aACvC;YAAC,OAAO,CAAC,EAAE;gBACV,MAAM,IAAI,KAAK,CAAC,wBAAwB,CAAC,EAAE,CAAC,CAAC;aAC9C;QACH,CAAC;KAAA;CACF;AAnED,0CAmEC","sourcesContent":["import IService, { IAppContext } from '../types/app';\r\nimport { IApartmentBooking, IApartmentBookingInput } from '../types/booking';\r\n\r\nexport default class ApartmentBookingService extends IService {\r\n  constructor(props: IAppContext) {\r\n    super(props);\r\n  }\r\n\r\n  async getApartmentBooking(GetApartmentBookingInput: any, userId: any) {\r\n    try {\r\n      await this.authenticate_user(userId);\r\n\r\n      const { apartment} = GetApartmentBookingInput;\r\n\r\n      const booking = await this.models.ApartmentBooking.findOne({apartment})\r\n\r\n      return booking;\r\n    } catch (e) {\r\n      throw new Error(`Error getting user's aparment booking: ${e}`);\r\n    }\r\n  }\r\n\r\n  async createApartmentBooking(\r\n    CreateApartmentBookingInput: IApartmentBookingInput,\r\n    userId: any\r\n  ): Promise<IApartmentBooking> {\r\n    try {\r\n      await this.authenticate_user(userId);\r\n\r\n      const { apartment } = CreateApartmentBookingInput;\r\n\r\n      await this.authenticate_apartment(apartment);\r\n\r\n      const booking = await this.models.ApartmentBooking.create({ user: userId, ...CreateApartmentBookingInput });\r\n\r\n      return booking;\r\n    } catch (e) {\r\n      throw new Error(`Error creating booking: ${e}`);\r\n    }\r\n  }\r\n\r\n  async updateApartmentBooking(UpdateApartmentBookingInput: any, userId: any): Promise<IApartmentBooking> {\r\n    try {\r\n      await this.authenticate_user(userId);\r\n\r\n      const { booking } = UpdateApartmentBookingInput;\r\n\r\n      const _booking = await this.authenticate_booking(booking);\r\n\r\n      _booking.updateOne({ $set: { ...UpdateApartmentBookingInput } });\r\n\r\n      return _booking;\r\n    } catch (e) {\r\n      throw new Error(`Error updating booking`);\r\n    }\r\n  }\r\n\r\n  async deleteApartmentBooking(bookingId: any, userId: any) {\r\n    try {\r\n      await this.authenticate_user(userId);\r\n\r\n      const _booking = await this.authenticate_booking(bookingId);\r\n\r\n      await _booking.deleteOne();\r\n\r\n      return 'deleted booking successfully';\r\n    } catch (e) {\r\n      throw new Error(`Error deleting user: ${e}`);\r\n    }\r\n  }\r\n}\r\n"]}