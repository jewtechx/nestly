{"version":3,"file":"index.js","sourceRoot":"/","sources":["graphql/index.ts"],"names":[],"mappings":";;;AAAA,+CAAuD;AACvD,2CAA8C;AAE9C,0DAAgC;AAChC,oEAA0C;AAC1C,gEAAsC;AACtC,gEAAsC;AAMtC,SAAwB,SAAS,CAAC,UAAuB;IACvD,MAAM,MAAM,GAAG,IAAA,8BAAmB,EAChC;QACE,IAAA,cAAU,EAAC,UAAU,CAAC;QACtB,IAAA,mBAAe,EAAC,UAAU,CAAC;QAC3B,IAAA,iBAAa,EAAC,UAAU,CAAC;QACzB,IAAA,iBAAa,EAAC,UAAU,CAAC;KAC1B,CACA,CAAC;IAEJ,MAAM,KAAK,GAAG,IAAI,qBAAY,CAAY;QACxC,MAAM;KACP,CAAC,CAAC;IAEH,OAAO,KAAK,CAAC;AACf,CAAC;AAfD,4BAeC","sourcesContent":["import { buildSubgraphSchema } from '@apollo/subgraph';\r\nimport { ApolloServer } from '@apollo/server';\r\nimport { IAppContext } from '../types/app';\r\nimport userSchema from './user';\r\nimport apartmentSchema from './apartment';\r\nimport bookingSchema from './booking';\r\nimport paymentSchema from './payment';\r\n\r\ninterface MyContext {\r\n  user?: any;\r\n}\r\n\r\nexport default function initGraph(appContext: IAppContext): ApolloServer {\r\n  const schema = buildSubgraphSchema(\r\n    [\r\n      userSchema(appContext),\r\n      apartmentSchema(appContext),\r\n      bookingSchema(appContext),\r\n      paymentSchema(appContext)\r\n    ]\r\n    );\r\n\r\n  const graph = new ApolloServer<MyContext>({\r\n    schema\r\n  });\r\n\r\n  return graph;\r\n}\r\n"]}