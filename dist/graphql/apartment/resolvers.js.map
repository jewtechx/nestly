{"version":3,"file":"resolvers.js","sourceRoot":"/","sources":["graphql/apartment/resolvers.ts"],"names":[],"mappings":";;;AAGA,mBAAyB,UAAuB;IAC9C,OAAO;QACL,SAAS,EAAE;YACT,kBAAkB,EAAE,UAAgB,CAAM;;oBACxC,OAAO,UAAU,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;gBACrD,CAAC;aAAA;SACF;QACD,KAAK,EAAE;YACL,YAAY,EAAE,UAAe,CAAK,EAAC,EAAC,WAAW,EAAC,EAAC,OAAW;;oBAC1D,OAAO,MAAM,UAAU,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAA;gBAChE,CAAC;aAAA;YACD,qBAAqB,EAAE,UAAgB,CAAM,EAAE,EAAE,EAAE,OAAY;;oBAC7D,MAAM,UAAU,GAAG,MAAM,UAAU,CAAC,QAAQ,CAAC,gBAAgB,CAAC,qBAAqB,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBACtG,OAAO,UAAU,CAAC;gBACpB,CAAC;aAAA;YACD,gBAAgB,EAAE,UAAgB,CAAM,EAAE,IAAS,EAAE,OAAY;;oBAC/D,MAAM,UAAU,GAAG,MAAM,UAAU,CAAC,QAAQ,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;oBAC3G,OAAO,UAAU,CAAC;gBACpB,CAAC;aAAA;SACF;QAED,QAAQ,EAAE;YACR,eAAe,EAAE,UAAgB,CAAM,EAAE,IAAS,EAAE,OAAY;;oBAC9D,MAAM,SAAS,GAAG,MAAM,UAAU,CAAC,QAAQ,CAAC,gBAAgB,CAAC,eAAe,CAC1E,IAAI,CAAC,oBAAoB,EACzB,OAAO,CAAC,IAAI,CAAC,GAAG,CACjB,CAAC;oBACF,OAAO,SAAS,CAAC;gBACnB,CAAC;aAAA;YACD,YAAY,EAAE,UAAgB,CAAK,EAAC,IAAQ,EAAC,OAAW;;oBACtD,MAAM,OAAO,GAAG,MAAM,UAAU,CAAC,QAAQ,CAAC,gBAAgB,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,EAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;oBACpG,OAAO,OAAO,CAAA;gBAChB,CAAC;aAAA;YACD,eAAe,EAAE,UAAgB,CAAM,EAAE,IAAS,EAAE,OAAY;;oBAC9D,MAAM,SAAS,GAAG,MAAM,UAAU,CAAC,QAAQ,CAAC,gBAAgB,CAAC,eAAe,CAC1E,IAAI,CAAC,oBAAoB,EACzB,OAAO,CAAC,IAAI,CAAC,GAAG,CACjB,CAAC;oBACF,OAAO,SAAS,CAAC;gBACnB,CAAC;aAAA;YACD,eAAe,EAAE,UAAgB,CAAM,EAAE,IAAS,EAAE,OAAY;;oBAC9D,MAAM,SAAS,GAAG,MAAM,UAAU,CAAC,QAAQ,CAAC,gBAAgB,CAAC,eAAe,CAC1E,IAAI,CAAC,oBAAoB,EACzB,OAAO,CAAC,IAAI,CAAC,GAAG,CACjB,CAAC;oBACF,OAAO,SAAS,CAAC;gBACnB,CAAC;aAAA;SACF;KACF,CAAC;AACJ,CAAC;AAjDD,4BAiDC","sourcesContent":["import { Query } from 'mongoose';\r\nimport { IAppContext } from '../../types/app';\r\n\r\nexport default function (appContext: IAppContext) {\r\n  return {\r\n    Apartment: {\r\n      __resolveReference: async function (_: any) {\r\n        return appContext.models.Apartment.findById(_._id);\r\n      },\r\n    },\r\n    Query: {\r\n      getApartment: async function(_:any,{apartmentId},context:any){\r\n        return await appContext.models.Apartment.findById(apartmentId) \r\n      },\r\n      getAllOwnerApartments: async function (_: any, {}, context: any) {\r\n        const apartments = await appContext.services.ApartmentService.getAllOwnerApartments(context.user._id);\r\n        return apartments;\r\n      },\r\n      getAllApartments: async function (_: any, args: any, context: any) {\r\n        const apartments = await appContext.services.ApartmentService.getAllApartments(args.GetAllApartmentsInput);\r\n        return apartments;\r\n      }\r\n    },\r\n\r\n    Mutation: {\r\n      createApartment: async function (_: any, args: any, context: any) {\r\n        const apartment = await appContext.services.ApartmentService.createApartment(\r\n          args.CreateApartmentInput,\r\n          context.user._id\r\n        );\r\n        return apartment;\r\n      },\r\n      uploadImages: async function (_:any,args:any,context:any) {\r\n        const message = await appContext.services.ApartmentService.uploadImages(args.useId,context.user._id)\r\n        return message\r\n      },\r\n      updateApartment: async function (_: any, args: any, context: any) {\r\n        const apartment = await appContext.services.ApartmentService.updateApartment(\r\n          args.UpdateApartmentInput,\r\n          context.user._id\r\n        );\r\n        return apartment;\r\n      },\r\n      deleteApartment: async function (_: any, args: any, context: any) {\r\n        const apartment = await appContext.services.ApartmentService.deleteApartment(\r\n          args.DeleteApartmentInput,\r\n          context.user._id\r\n        );\r\n        return apartment;\r\n      }\r\n    },\r\n  };\r\n}\r\n"]}